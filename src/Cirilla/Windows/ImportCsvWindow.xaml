<Window x:Class="Cirilla.Windows.ImportCsvWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:root="clr-namespace:Cirilla"
        mc:Ignorable="d"
        Title="Import CSV" Height="450" Width="800">
    <DockPanel>
        <Grid DockPanel.Dock="Top">
            <Expander Header="Information">
                <TextBlock Margin="5">
                    This function import all values that have matching keys from the CSV file.
                    <LineBreak/>
                    - If the CSV file has a key that doesn't exist in the GMD file it will be ignored
                    <LineBreak/>
                    - This function will not change any values that are not defined in the CSV file
                    <LineBreak/><LineBreak/>
                    This means that you can make a CSV file with your wanted changes (like a patch file) and then apply it to a GMD file.
                    <LineBreak/>
                    And whenever there is an update for Monster Hunter World that changes your edited GMD file you can just reapply the patch with your CSV file.
                </TextBlock>
            </Expander>
        </Grid>

        <Grid DockPanel.Dock="Bottom" Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0" Content="Open CSV file" Command="{Binding OpenCsvCommand}"/>
            <CheckBox Grid.Column="2" Content="Hide unchanged entries" IsChecked="{Binding HideUnchangedEntries}" VerticalAlignment="Center" Margin="5, 0, 5, 0"/>
            <Button Grid.Column="3" Content="Apply changes" Command="{Binding ApplyCommand}"/>
            <Button Grid.Column="5" Content="Cancel" Click="Cancel_Click"/>
        </Grid>

        <DataGrid ItemsSource="{Binding FilteredEntries}" AutoGenerateColumns="False">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Key">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="Current">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding CurrentValue}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HasChanges}" Value="True">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="New">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding NewValue}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HasChanges}" Value="True">
                                                <Setter Property="Foreground" Value="Green"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</Window>
