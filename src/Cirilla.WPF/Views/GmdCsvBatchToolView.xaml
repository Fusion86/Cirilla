<UserControl x:Class="Cirilla.WPF.Views.GmdCsvBatchToolView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:Cirilla.WPF.Views"
             xmlns:vc="clr-namespace:Cirilla.WPF.ValueConverters"
             xmlns:mvvm="clr-namespace:Cirilla.MVVM;assembly=Cirilla.MVVM"
             xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
             xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <vc:VisibilityConverter x:Key="VisibilityConverter"/>
        <vc:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <mvvm:ApplicationSettings x:Key="ApplicationSettings"/>

        <sys:Boolean x:Key="True">True</sys:Boolean>
    </UserControl.Resources>

    <DockPanel Margin="8">
        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="120"/>
                <ColumnDefinition Width="8"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="4"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Text="Mode"/>
            <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Grid>
                                        <Border x:Name="Border"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="{TemplateBinding adonisExtensions:CornerRadiusExtension.CornerRadius}"/>

                                        <Border x:Name="SpotlightLayer"
                                                Background="{TemplateBinding adonisExtensions:CursorSpotlightExtension.BackgroundBrush}"
                                                BorderBrush="{TemplateBinding adonisExtensions:CursorSpotlightExtension.BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="{TemplateBinding adonisExtensions:CornerRadiusExtension.CornerRadius}"
                                                adonisExtensions:CursorSpotlightExtension.MouseEventSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ToggleButton}}"
                                                SnapsToDevicePixels="False"/>

                                        <ContentPresenter Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                          Margin="{TemplateBinding Padding}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="Border"
                                                    Property="Background"
                                                    Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}"/>

                                            <Setter TargetName="SpotlightLayer"
                                                    Property="Background"
                                                    Value="{DynamicResource {x:Static adonisUi:Brushes.AccentHighlightBrush}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </StackPanel.Resources>

                <RadioButton GroupName="Mode" Content="GMD to CSV" IsChecked="{Binding IsGmdToCsvSelected}"/>
                <RadioButton GroupName="Mode" Content="CSV to GMD"/>
            </StackPanel>

            <TextBlock Grid.Row="2"
                       Grid.Column="0"
                       VerticalAlignment="Center"
                       Text="GMD Source Directory"
                       Margin="0,0,0,4"
                       Visibility="{Binding IsCsvToGmdSelected, Converter={StaticResource VisibilityConverter}}"/>

            <DockPanel Grid.Row="2"
                       Grid.Column="2"
                       Margin="0,0,0,4"
                       Visibility="{Binding IsCsvToGmdSelected, Converter={StaticResource VisibilityConverter}}">
                <Button DockPanel.Dock="Right" Margin="8,0,0,0" Content="Browse" Command="{Binding ShowBrowseGmdSourceFolderDialogCommand}"/>
                <TextBox Text="{Binding GmdSourceFolder}"/>
            </DockPanel>

            <TextBlock Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" Text="Output Directory"/>
            <DockPanel Grid.Row="3" Grid.Column="2">
                <Button DockPanel.Dock="Right" Margin="8,0,0,0" Content="Browse" Command="{Binding ShowBrowseOutputFolderDialogCommand}"/>

                <Grid>
                    <TextBox Text="{Binding GmdToCsvOutputFolder, UpdateSourceTrigger=PropertyChanged}"
                             Visibility="{Binding IsGmdToCsvSelected, Converter={StaticResource VisibilityConverter}}"/>

                    <TextBox Text="{Binding CsvToGmdOutputFolder, UpdateSourceTrigger=PropertyChanged}"
                             Visibility="{Binding IsCsvToGmdSelected, Converter={StaticResource VisibilityConverter}}"/>
                </Grid>
            </DockPanel>
        </Grid>

        <DockPanel>
            <Grid DockPanel.Dock="Top" Margin="0,8,0,8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <Button Content="Add Files" Command="{Binding ShowAddFileDialogCommand}"/>
                    <Button Content="Add Folder" Command="{Binding ShowAddFolderDialogCommand}" Margin="8,0,0,0"/>
                    <Button Content="Add Folder Recursively" Command="{Binding ShowAddFolderDialogCommand}" CommandParameter="{StaticResource True}" Margin="8,0,0,0"/>
                    <Button Content="Clear All" Command="{Binding ClearAllCommand}" Margin="8,0,0,0"/>
                </StackPanel>

                <TextBlock Grid.Column="1" Text="{Binding SelectedItemsCountText}" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                <Button Grid.Column="2" Content="{Binding ExportButtonText}" Command="{Binding ExecuteBatchToolCommand}"/>
            </Grid>

            <Grid>
                <DataGrid Visibility="{Binding IsGmdToCsvSelected, Converter={StaticResource VisibilityConverter}}"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      ItemsSource="{Binding GmdFilesBinding}"
                      ScrollViewer.CanContentScroll="{Binding Source={StaticResource ApplicationSettings}, Path=Current.SmoothScroll, Converter={StaticResource InverseBooleanConverter}}">
                    <DataGrid.Resources>
                        <Style TargetType="ScrollBar" BasedOn="{StaticResource {x:Type ScrollBar}}">
                            <Setter Property="adonisExtensions:ScrollBarExtension.ExpansionMode" Value="AlwaysExpand"/>
                        </Style>
                    </DataGrid.Resources>

                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Full Path" Binding="{Binding FullPath}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Target" Binding="{Binding Target}" IsReadOnly="True"/>
                    </DataGrid.Columns>
                </DataGrid>

                <DataGrid Visibility="{Binding IsCsvToGmdSelected, Converter={StaticResource VisibilityConverter}}"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      ItemsSource="{Binding CsvFilesBinding}"
                      ScrollViewer.CanContentScroll="{Binding Source={StaticResource ApplicationSettings}, Path=Current.SmoothScroll, Converter={StaticResource InverseBooleanConverter}}">
                    <DataGrid.Resources>
                        <Style TargetType="ScrollBar" BasedOn="{StaticResource {x:Type ScrollBar}}">
                            <Setter Property="adonisExtensions:ScrollBarExtension.ExpansionMode" Value="AlwaysExpand"/>
                        </Style>
                    </DataGrid.Resources>

                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Full Path" Binding="{Binding FullPath}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="GMD Source" Binding="{Binding GmdSourcePath}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Target" Binding="{Binding Target}" IsReadOnly="True"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </DockPanel>
    </DockPanel>
</UserControl>
