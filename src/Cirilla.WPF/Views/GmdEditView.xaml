<UserControl x:Class="Cirilla.WPF.Views.GmdEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Cirilla.WPF.Views"
             xmlns:ctrl="clr-namespace:Cirilla.WPF.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="8"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="8"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="8"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" Text="Key" VerticalAlignment="Center"/>
            <TextBox Grid.Column="2" Text="{Binding KeySearchQuery, UpdateSourceTrigger=PropertyChanged}"/>

            <TextBlock Grid.Column="4" Text="Value" VerticalAlignment="Center"/>
            <TextBox Grid.Column="6" Text="{Binding ValueSearchQuery, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>

        <DataGrid x:Name="dataGrid"
                  Grid.Row="1"
                  ColumnWidth="*"
                  AutoGenerateColumns="False"
                  ItemsSource="{Binding FilteredEntries}"
                  SelectedItem="{Binding SelectedEntry}"
                  CanUserResizeColumns="True"
                  SelectionMode="Extended"
                  CanUserAddRows="False">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem IsEnabled="False" DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget}">
                        <MenuItem.Header>
                            <TextBlock>
                                <!-- These NEED to be on the same line, otherwise WPF adds some extra spaces between the (). -->
                                <Run Text="Selected Rows ("/><Run Text="{Binding SelectedItems.Count, Mode=OneWay}"/><Run Text=")"/>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>

                    <!--
                    The command binding is ONLY used for its CanExecute property, it does NOT get called. The Click method is what is being executed. 
                    -->

                    <MenuItem Header="Delete Selected Rows" Click="DeleteSelectedRows_Click"/>
                </ContextMenu>
            </DataGrid.ContextMenu>

            <DataGrid.Columns>
                <!-- Index -->
                <DataGridTextColumn Header="Index"
                                    Binding="{Binding Index}"
                                    IsReadOnly="True"
                                    Width="50"
                                    SortDirection="Ascending"/>

                <!-- Key -->
                <DataGridTextColumn Header="Key"
                                    Width="120"
                                    Binding="{Binding Key, UpdateSourceTrigger=PropertyChanged}"/>

                <!-- Value -->
                <DataGridTextColumn Header="Value" Binding="{Binding Value, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="TextBox">
                            <Setter Property="AcceptsReturn" Value="True"/>
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>

                <!-- Preview -->
                <DataGridTemplateColumn Header="Preview">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ctrl:MojiRenderer Text="{Binding Value}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Value}" Value="">
                            <Setter Property="Background" Value="#55FFF000"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Value}" Value="Invalid Message">
                            <Setter Property="Background" Value="#55FFF000"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Key}" Value="{x:Null}">
                            <Setter Property="Background" Value="#55FF7F00"/>
                        </DataTrigger>

                        <!-- The IsSelected color should override any other color. -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>
    </Grid>
</UserControl>
