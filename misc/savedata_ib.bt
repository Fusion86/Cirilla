//------------------------------------------------
//--- 010 Editor v8.0 Binary Template
//
//      File:
//   Authors: Fusion86 and many others.
//   Version:
//   Purpose:
//  Category:
// File Mask:
//  ID Bytes:
//   History:
//------------------------------------------------

// Notes:
// SaveSlot size 2136768 (0x209AC0)

// Unchanged from base
struct HEADER {
    byte magic[4];
    uint unk1;
    uint unk2;
    byte hash[20];
    uint64 datasize;
    uint64 steamid;
    byte padding[16];
};

struct CHARACTER_MAKEUP {
    ubyte color[4];
    float posX;
    float posY;
    float sizeX;
    float sizeY;
    float glossy; // Inverted?
    float metallic;
    float luminescent;
    int type;
};

// int32, aka 4 bytes
enum CHARACTER_GENDER {
    genderMale = 0,
    genderFemale = 1
};

struct CHARACTER_APPEARANCE {
    int unk2;
    CHARACTER_MAKEUP makeup2;
    CHARACTER_MAKEUP makeup1;
    CHARACTER_MAKEUP makeup3; // Yes this is the correct order

    ubyte leftEyeColor[4];
    ubyte rightEyeColor[4];
    ubyte eyebrowColor[4];
    ubyte facialHairColor[4];

    ubyte eyeWidth;
    ubyte eyeHeight;
    ubyte skinColorX;
    ubyte skinColorY;
    ubyte age;
    ubyte wrinkles;
    ubyte noseHeight;
    ubyte mouthHeight;

    CHARACTER_GENDER gender;

    ubyte browType;
    ubyte faceType;
    ubyte eyeType;
    ubyte noseType;

    ubyte mouthType;
    ubyte eyebrowType;
    ubyte eyelashLength;
    ubyte facialHairType;

    int unk1;

    ubyte hairColor[4];
    ubyte clothingColor[4];
    ushort hairType;

    ubyte clothingType;
    ubyte voice;
    int expression;
};

struct PALICO_APPEARANCE {
    ubyte patternColor1[4];
    ubyte patternColor2[4];
    ubyte patternColor3[4];
    ubyte furColor[4];
    ubyte leftEyeColor[4];
    ubyte rightEyeColor[4];
    ubyte clothingColor[4];

    float furLength; // Max 0.7
    float furThickness; // Max 3

    ubyte patternType;
    ubyte eyeType;
    ubyte earType;
    ubyte tailType;

    ubyte voiceType;
    ubyte voicePitch;
    ushort unk1; // Outline/face and pupils?
};

struct WEAPON_USAGE {
    ushort greatSword;
    ushort longSword;
    ushort swordAndShield;
    ushort dualBlades;
    ushort hammer;
    ushort huntingHorn;
    ushort lance;
    ushort gunlance;
    ushort switchAxe;
    ushort chargeBlade;
    ushort insectGlaive;
    ushort lightBowgun;
    ushort heavyBowgun;
    ushort bow;
};

// Monster indexes for guild card (captured, slayed, largest, smallest and researchLevel)
//  0 = Great Jagras
//  1 = Kulu-Ya-Ku
//  2 = Pukei-Pukei
//  3 = Barroth
//  4 = Jyuratodus
//  5 = Tobi-Kadachi
//  6 = Anjanath
//  7 = Rathian
//  8 = Tzitzi-Ya-Ku
//  9 = Paolumu
// 10 = Great Girros
// 11 = Radobaan
// 12 = Legiana
// 13 = Odogaron
// 14 = Rathalos
// 15 = Diablos
// 16 = Kirin
// 17 = Zorah Magdaros
// 18 = Dodogama
// 19 = Pink Rathian
// 20 = Bazelgeuse
// 21 = Lavasioth
// 22 = Uragaan
// 23 = Azure Rathalos
// 24 = Black Diablos
// 25 = Nergigante
// 26 = Teostra
// 27 = Kushala Daora
// 28 = Vaal Hazak
// 29 = Xeno'jiiva
// 30 = Deviljho
// 31 = Kulve Taroth
// 32 = Lunastra
// 33 = Behemoth
// 34 = Leshen
// 35 = Ancient Leshen
// 36 = Beotodus
// 37 = Banbaro
// 38 = Viper Tobi-Kadachi
// 39 = Nightshade Paolumu
// 40 = Coral Pukei-Pukei
// 41 = Barioth
// 42 = Nargacuga
// 43 = Glavenus
// 44 = Tigrex
// 45 = Brachydios
// 46 = Acidic Glavenus
// 47 = Shrieking Legiana
// 48 = Fulgur Anjanath
// 49 = Ebony Odogaron
// 50 = Velkhana
// 51 = Seething Bazelgeuse
// 52 = Blackveil Vaal Hazak
// 53 = Namielle
// 54 = Savage Deviljho
// 55 = Ruiner Nergigante
// 56 = Shara Ishvalda
// 57 = Zinogre
// 58 = Yian Garuga
// 60 = Brute Tigrex
// 61 = Gold Rathian
// 62 = Silver Rathalos
// 63 = Rajang
// 64 = Stygian Zinogre
// 65 = Safi'jiiva
// 69 = Alatreon

struct GUILDCARD {
    uint64 steamId;
    uint64 createdOn; // Timestamp
    byte unk1;
    uint hunterRank;
    uint playTimeSec;
    uint64 lastUpdated;
    uint zero1;

    char hunterName[64];
    char primaryGroup[54];
    byte unk2[16];
    CHARACTER_APPEARANCE characterAppearance;
    byte unk3[212];

    char palicoName[64];
    uint palicoRank;
    byte unk4[194]; // Probably palico stats + quest/arena completion counter

    WEAPON_USAGE lowRank;
    WEAPON_USAGE highRank;
    WEAPON_USAGE investigations;
    WEAPON_USAGE masterRank;
    WEAPON_USAGE guidingLands;

    byte unk5[4];

    char greeting[256];
    char title[256];

    byte unk6[5454];

    ushort captured[96];
    ushort slayed[96];
    ushort largest[96];
    ushort smallest[96];
    byte researchLevel[96];
};

struct SAVEDATA_SAVESLOT {
    char hunterName[64];
    int hunterRank;
    int masterRank;
    int zeni;
    int researchPoints;
    int hunterXp;
    int unk2;
    int timePlayedSec;

    CHARACTER_APPEARANCE characterAppearance;
    byte unk3[382];
    PALICO_APPEARANCE palicoAppearance;

    GUILDCARD guildCard;
    GUILDCARD collectedGuildCards[100];

    byte unk4[969962];
    char palicoName[64];
    byte unk5[379569];
};

struct SAVEDATA {
    HEADER header;
    uint64 offsets[4];

    byte section1[3145744]; // offsets[1] - offsets[0]
    byte section2[4112]; // offsets[2] - offsets[1]
    byte section3[72]; // offsets[3] - offsets[2]
    byte section4[20]; // 20

    SAVEDATA_SAVESLOT saveslots[3];
    byte zero[1724356];
} savedata <open=true>;
