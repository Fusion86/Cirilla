<UserControl x:Class="Cirilla.UserControls.GMDEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:root="clr-namespace:Cirilla"
             xmlns:convert="clr-namespace:Cirilla.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <convert:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    </UserControl.Resources>

    <TabControl>
        <TabItem Header="Header">
            <DataGrid ItemsSource="{Binding HeaderMetadata}" ColumnWidth="*" AutoGenerateColumns="False" BorderThickness="0" CanUserAddRows="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Key" Binding="{Binding Key}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Value" Binding="{Binding Value}" IsReadOnly="True"/>
                </DataGrid.Columns>
            </DataGrid>
        </TabItem>

        <TabItem Header="Entries">
                <!--<Menu DockPanel.Dock="Top" Background="White">
                    <MenuItem Header="Add">
                        <MenuItem Header="Add Normal entry (with key)" Command="{Binding AddEntryCommand}"/>
                        <MenuItem Header="Add Padding entry (no key)" Command="{Binding AddEntryNoKeyCommand}"/>
                    </MenuItem>
                </Menu>-->

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Menu Grid.Column="0" Background="White">
                            <MenuItem Header="Add">
                                <MenuItem Header="Add Normal entry (with key)" Command="{Binding AddEntryCommand}"/>
                                <MenuItem Header="Add Padding entry (no key)" Command="{Binding AddEntryNoKeyCommand}"/>
                            </MenuItem>
                        </Menu>

                        <TextBlock Grid.Column="1" Text="Search: "/>
                        <TextBox Grid.Column="2" Text="{Binding SearchQuery, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.InputBindings>
                                <KeyBinding Key="Return" Command="{Binding TriggerSearchCommand}"/>
                            </TextBox.InputBindings>
                        </TextBox>
                    </Grid>

                    <DataGrid Grid.Row="1" ItemsSource="{Binding FilteredEntries}" ColumnWidth="*" AutoGenerateColumns="False" BorderThickness="0" CanUserDeleteRows="{root:SettingBinding UnsafeModeEnabled}" CanUserAddRows="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Index" Binding="{Binding Index}" IsReadOnly="True" Width="50"/>
                            <DataGridTextColumn Header="Key" Binding="{Binding Key}" IsReadOnly="{root:SettingBinding UnsafeModeEnabled, Converter={StaticResource InverseBooleanConverter}}"/>
                            <DataGridTextColumn Header="Value" Binding="{Binding Value}">
                                <DataGridTextColumn.EditingElementStyle>
                                    <Style TargetType="TextBox">
                                        <Setter Property="AcceptsReturn" Value="true" />
                                    </Style>
                                </DataGridTextColumn.EditingElementStyle>
                            </DataGridTextColumn>
                        </DataGrid.Columns>

                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Value}" Value="Invalid Message">
                                        <Setter Property="Background" Value="Yellow"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Key}" Value="">
                                        <Setter Property="Background" Value="Orange"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                    </DataGrid>
                </Grid>
        </TabItem>
    </TabControl>
</UserControl>
